/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectofinal;


import javax.swing.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

public class ClienteCRUD extends JFrame {

    private JButton btnEliminar;
    private Connection connection;
    private Statement statement;
ConexionMYSQL con= new ConexionMYSQL();
    Connection cn = con.conectar();
    
    public ClienteCRUD() {
        
       
        initComponents();
        try {
        connection = DriverManager.getConnection("jdbc:mysql://localhost:33065/pruebaproyecto", "root", "");
        statement = connection.createStatement();
    } catch (SQLException ex) {
        // Manejo de errores al establecer la conexión o crear el statement
        ex.printStackTrace();
    }
      Producto = new javax.swing.JButton();
    Proveedor = new javax.swing.JButton();
    Venta = new javax.swing.JButton();
    Empleados = new javax.swing.JButton();
    
    Compra = new javax.swing.JButton();
    btnCliente = new javax.swing.JButton();
        
        mostrarDatos("");
        this.setLocationRelativeTo(null);

        //los botones
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        campodir = new javax.swing.JTextField();
        campotelefono = new javax.swing.JTextField();
        campoapellido = new javax.swing.JTextField();
        camponombre = new javax.swing.JTextField();
        campoidcliente = new javax.swing.JTextField();
        bntlimpiarcampos = new javax.swing.JButton();
        bntagregarcliente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Producto = new javax.swing.JButton();
        Compra = new javax.swing.JButton();
        Proveedor = new javax.swing.JButton();
        Venta = new javax.swing.JButton();
        btnCliente = new javax.swing.JButton();
        Empleados = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        bnteliminarcliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtablecliente = new javax.swing.JTable();
        bntactualizarcliente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        campodir.setBorder(javax.swing.BorderFactory.createTitledBorder("Dirección"));
        campodir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campodirActionPerformed(evt);
            }
        });

        campotelefono.setBorder(javax.swing.BorderFactory.createTitledBorder("Teléfono"));

        campoapellido.setBorder(javax.swing.BorderFactory.createTitledBorder("Apellido"));

        camponombre.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));

        campoidcliente.setBorder(javax.swing.BorderFactory.createTitledBorder("ID Cliente"));

        bntlimpiarcampos.setBackground(new java.awt.Color(204, 255, 204));
        bntlimpiarcampos.setText("Limpiar");
        bntlimpiarcampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntlimpiarcamposActionPerformed(evt);
            }
        });

        bntagregarcliente.setBackground(new java.awt.Color(0, 204, 204));
        bntagregarcliente.setForeground(new java.awt.Color(255, 255, 255));
        bntagregarcliente.setText("Agregar Cliente");
        bntagregarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntagregarclienteActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Georgia", 2, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gestion 360");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Producto.setBackground(new java.awt.Color(153, 153, 255));
        Producto.setForeground(new java.awt.Color(255, 255, 255));
        Producto.setText("Productos");
        Producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductoActionPerformed(evt);
            }
        });

        Compra.setBackground(new java.awt.Color(153, 153, 255));
        Compra.setForeground(new java.awt.Color(255, 255, 255));
        Compra.setText("Compras");
        Compra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompraActionPerformed(evt);
            }
        });

        Proveedor.setBackground(new java.awt.Color(153, 153, 255));
        Proveedor.setForeground(new java.awt.Color(255, 255, 255));
        Proveedor.setText("Proveedores");
        Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProveedorActionPerformed(evt);
            }
        });

        Venta.setBackground(new java.awt.Color(153, 153, 255));
        Venta.setForeground(new java.awt.Color(255, 255, 255));
        Venta.setText("Ventas");
        Venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VentaActionPerformed(evt);
            }
        });

        btnCliente.setBackground(new java.awt.Color(204, 102, 0));
        btnCliente.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnCliente.setText("Clientes");
        btnCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteActionPerformed(evt);
            }
        });

        Empleados.setBackground(new java.awt.Color(153, 153, 255));
        Empleados.setForeground(new java.awt.Color(255, 255, 255));
        Empleados.setText("Empleados");
        Empleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmpleadosActionPerformed(evt);
            }
        });

        jButton12.setText("Cerrar sesion");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(Producto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Compra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Proveedor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(Venta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Empleados, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(Producto)
                .addGap(37, 37, 37)
                .addComponent(Compra)
                .addGap(32, 32, 32)
                .addComponent(Proveedor)
                .addGap(40, 40, 40)
                .addComponent(Venta)
                .addGap(31, 31, 31)
                .addComponent(btnCliente)
                .addGap(31, 31, 31)
                .addComponent(Empleados)
                .addGap(44, 44, 44)
                .addComponent(jButton12))
        );

        bnteliminarcliente.setBackground(new java.awt.Color(204, 0, 0));
        bnteliminarcliente.setForeground(new java.awt.Color(255, 255, 255));
        bnteliminarcliente.setText("Eliminar");
        bnteliminarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnteliminarclienteActionPerformed(evt);
            }
        });

        jtablecliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID cliente", "Nombre", "Apellido", "Telefono", "Dirección"
            }
        ));
        jtablecliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableclienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtablecliente);

        bntactualizarcliente.setBackground(new java.awt.Color(0, 102, 102));
        bntactualizarcliente.setForeground(new java.awt.Color(255, 255, 255));
        bntactualizarcliente.setText("Actualizar");
        bntactualizarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntactualizarclienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(bnteliminarcliente)
                                .addGap(88, 88, 88)
                                .addComponent(bntactualizarcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)))))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bnteliminarcliente)
                            .addComponent(bntactualizarcliente)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(campoidcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(campotelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(camponombre, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campodir, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(campoapellido, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bntlimpiarcampos, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntagregarcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(bntagregarcliente)
                        .addGap(33, 33, 33)
                        .addComponent(bntlimpiarcampos))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoidcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(camponombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campodir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campotelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoapellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new java.awt.GridBagConstraints());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campodirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campodirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campodirActionPerformed

    private void EmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmpleadosActionPerformed
        Emp4();
    }//GEN-LAST:event_EmpleadosActionPerformed

    private void VentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VentaActionPerformed
        Vents4();
    }//GEN-LAST:event_VentaActionPerformed

    private void ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProveedorActionPerformed
        Proveedor4();
    }//GEN-LAST:event_ProveedorActionPerformed

    private void CompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompraActionPerformed
        Comp4();
    }//GEN-LAST:event_CompraActionPerformed

    private void ProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductoActionPerformed
        Prod4();
    }//GEN-LAST:event_ProductoActionPerformed

    private void bntagregarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntagregarclienteActionPerformed
       guardarCliente();
    }//GEN-LAST:event_bntagregarclienteActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Menu men= new Menu();
        men.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void bnteliminarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnteliminarclienteActionPerformed
        
        eliminarcliente();
        
    }//GEN-LAST:event_bnteliminarclienteActionPerformed

    private void btnClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClienteActionPerformed

    private void bntactualizarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntactualizarclienteActionPerformed
        
        actualizarCliente();
        
    }//GEN-LAST:event_bntactualizarclienteActionPerformed

    private void bntlimpiarcamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntlimpiarcamposActionPerformed
        
        limpiarcampos();
    }//GEN-LAST:event_bntlimpiarcamposActionPerformed

    private void jtableclienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableclienteMouseClicked
        
        bntagregarcliente.setEnabled(false);
        bntactualizarcliente.setEnabled(true);
        bnteliminarcliente.setEnabled(true);
        bntlimpiarcampos.setEnabled(true);
        int fila= this.jtablecliente.getSelectedRow();
        this.campoidcliente.setText(this.jtablecliente.getValueAt(fila, 0).toString());
        this.camponombre.setText(this.jtablecliente.getValueAt(fila, 1).toString());
        this.campoapellido.setText(this.jtablecliente.getValueAt(fila, 2).toString());
        this.campodir.setText(this.jtablecliente.getValueAt(fila, 3).toString());
        this.campotelefono.setText(this.jtablecliente.getValueAt(fila, 4).toString());
        
        
    }//GEN-LAST:event_jtableclienteMouseClicked
    
     private void guardarCliente() {
        String nombre = camponombre.getText();
        String apellido = campoapellido.getText();
        String id = campoidcliente.getText();
        String direccion = campodir.getText();
        String telefono = campotelefono.getText();

        try {
            statement.executeUpdate("INSERT INTO Cliente (Nombre, Apellido, IdCliente, Direccion, Telefono) " +
                "VALUES ('" + nombre + "', '" + apellido + "', '" + id + "', '" + direccion + "', '" + telefono + "')");
            JOptionPane.showMessageDialog(null, "Cliente guardado exitosamente.");
            mostrarDatos("");
            limpiarcampos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar el cliente: " + ex.getMessage());
        }
    }
    
     private void Prod4(){
        Almacen prod = new Almacen();
        prod.setVisible(true);
        this.setVisible(false);
    }
          private void Comp4(){
        ComprasCRUD compras = new ComprasCRUD();
        compras.setVisible(true);
        this.setVisible(false);
    }
          private void Proveedor4(){
        Proveedor prov = new Proveedor();
        prov.setVisible(true);
        this.setVisible(false);
    }
          private void Vents4(){
        VentasCRUD vent = new VentasCRUD();
        vent.setVisible(true);
        this.setVisible(false);
    }
          
    
      
           private void Emp4(){
        Empleado Emp= new Empleado();
        Emp.setVisible(true);
        this.setVisible(false);
    }
    
            
    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ClienteCRUD().setVisible(true);
            }
        });
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton Compra;
    public static javax.swing.JButton Empleados;
    public static javax.swing.JButton Producto;
    public static javax.swing.JButton Proveedor;
    public static javax.swing.JButton Venta;
    private javax.swing.JButton bntactualizarcliente;
    private javax.swing.JButton bntagregarcliente;
    private javax.swing.JButton bnteliminarcliente;
    private javax.swing.JButton bntlimpiarcampos;
    public static javax.swing.JButton btnCliente;
    private javax.swing.JTextField campoapellido;
    private javax.swing.JTextField campodir;
    private javax.swing.JTextField campoidcliente;
    private javax.swing.JTextField camponombre;
    private javax.swing.JTextField campotelefono;
    private javax.swing.JButton jButton12;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtablecliente;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatos(String valorBuscar) {
               
        String consultaSQL = "SELECT * FROM Cliente WHERE CONCAT(Nombre,'',Apellido) LIKE '%" + valorBuscar + "%'";
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("IdCliente");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Direccion");
        modelo.addColumn("Telefono");
        
       
        jtablecliente.setModel(modelo);
        //String consultaSQL = "SELECT * FROM tbl_usuarios ORDER BY id";
        String data[] = new String[5];
        Statement st;
        
        try {
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(consultaSQL);
            while (rs.next()) {
                data[0] = rs.getString(1);
                data[1] = rs.getString(2);
                data[2] = rs.getString(3);
                data[3] = rs.getString(4);
               data[4] = rs.getString(5);
               
              
                
                modelo.addRow(data);
            }
            jtablecliente.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error en la consulta SQL: " + ex);
        }
            }
    
    private void actualizarCliente() {

         try{
            PreparedStatement ps = cn.prepareStatement("UPDATE cliente SET " +
        "IdCliente='" + campoidcliente.getText() + "', " +
        "Nombre='" + camponombre.getText() + "', " +
        "Apellido='" + campoapellido.getText() + "', " +
        "Direccion='" + campodir.getText() + "', " +
        "Telefono='" + campotelefono.getText() + "' " +  // No debe haber una coma después de la última columna
        "WHERE IdCliente='" + campoidcliente.getText() + "'"
            );
            int indice= ps.executeUpdate();

            if (indice > 0){
                JOptionPane.showMessageDialog(rootPane,"Datos Actualizados Correctamente");
                mostrarDatos("");
                limpiarcampos();

            }else{
                JOptionPane.showMessageDialog(rootPane,"Selccione una fila");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error al actualizar datos " + ex);

        }

    }

    private void limpiarcampos() {
        
        campoidcliente.setText("");
        camponombre.setText("");
        campoapellido.setText("");
        campodir.setText("");
        campotelefono.setText("");
        campoidcliente.requestFocus();
        bntagregarcliente.setEnabled(true);
    }

    private void eliminarcliente() {

if (JOptionPane.showConfirmDialog(rootPane, "Se eliminara el registro, desea continuar?", "Eliminar Registro",
                JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                String Borrar = "DELETE FROM cliente WHERE IdCliente  ='" + campoidcliente.getText() + "'";
                PreparedStatement ps;
                ps = (PreparedStatement) cn.prepareStatement(Borrar);
                int respuesta = ps.executeUpdate();
                if (respuesta > 0) {
                    JOptionPane.showMessageDialog(null, "Registro eliminado con exito!");
                    limpiarcampos();
                    mostrarDatos("");
                    campoidcliente.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(null, "No ha seleccionado la fila a ser borrada.");
                    limpiarcampos();
                    mostrarDatos("");
                    campoidcliente.requestFocus();
                }
            } catch (SQLException e) {
                System.err.println("Error al eliminar...." + e);
                JOptionPane.showMessageDialog(null, "Error al eliminar!");
            }

        } else {
            limpiarcampos();
            mostrarDatos("");
            campoidcliente.requestFocus();
    
    }
        
    }


}
